---
- name: Lire et nettoyer un fichier CSV
  hosts: localhost
  tasks:
    - name: Lire le fichier CSV
      community.general.read_csv:
        path: temperatures.csv
      register: data

    - name: Supprimer les doublons et trier
      ansible.builtin.set_fact:
        unique_sorted_data: "{{ data.list | unique | sort(attribute='time') }}"

    - name: Afficher les données uniques et triées
      ansible.builtin.debug:
        msg: "{{ unique_sorted_data }}"

    - name: Obtenir l'heure actuelle
      ansible.builtin.set_fact:
        current_time: "{{ ansible_date_time.iso8601 | regex_replace('Z.*', '') | regex_replace('*.T', '') }}"

    - name: Afficher l'heure actuelle
      ansible.builtin.debug:
        msg: "Heure actuelle : {{ current_time }}"

    - name: Filtrer les données pour l'heure actuelle
      ansible.builtin.set_fact:
        filtered_data: "{{ unique_sorted_data | selectattr('time', 'equalto', current_time) | list }}"

    - name: Afficher les données filtrées
      ansible.builtin.debug:
        msg: "Données pour l'heure actuelle : {{ filtered_data }}"

    - name: Obtenir la temperature_actuelle
      ansible.builtin.set_fact:
        temperature_actuelle: "{{ unique_sorted_data | selectattr('time', 'equalto', date_formatee) | map(attribute='temperature') | list | first }}"

    - name: Sauvegarder le fichier nettoyé
      ansible.builtin.copy:
        content: "{{ unique_sorted_data | to_json }}"
        dest: "./temperatures_cleaned.json"
        mode: a=wr

    - name: Obtenir les températures
      ansible.builtin.uri:
        url: "https://api.open-meteo.com/v1/forecast?latitude=48.8566&longitude=2.3522&current_weather=true"
        method: GET
      register: meteo

    - name: Extraire la température actuelle
      ansible.builtin.set_fact:
        temperature_actuelle: "{{ meteo.json.current_weather.temperature }}"

    - name: Lire le fichier JSON
      ansible.builtin.include_vars:
        file: ./temperatures_cleaned.json
      register: donnees_json

    - name: Comparer les températures
      ansible.builtin.debug:
        msg: "Température actuelle : {{ temperature_actuelle }}°C | Température enregistrée à {{ item.heure }} : {{ item.temperature }}°C"
      loop: "{{ donnees_json.releves }}"
...
